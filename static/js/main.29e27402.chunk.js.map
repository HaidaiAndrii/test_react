{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","userEmail","setEmail","userPass","setPass","isLoginError","setLoginError","isPassError","setPassError","isShowPass","setShowPass","isError","setError","className","type","placeholder","onChange","event","target","value","onClick","checked","alert","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAqGeA,MAlGf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACKC,EADL,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEIC,EAFJ,OAGyBJ,oBAAS,GAHlC,mBAGNK,EAHM,KAGQC,EAHR,OAIuBN,oBAAS,GAJhC,mBAINO,EAJM,KAIOC,EAJP,OAKqBR,oBAAS,GAL9B,mBAKNS,EALM,KAKMC,EALN,OAMeV,oBAAS,GANxB,mBAMNW,EANM,KAMGC,EANH,KA4Bb,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,iBACf,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,cAAd,mBACA,uBAAOC,KAAK,OACVD,UAAYR,EAAgC,kCAAjB,eAC3BU,YAAY,gBACZC,SAAU,SAAAC,GAAK,OAAIf,EAASe,EAAMC,OAAOC,UAE1Cd,GAAgB,qBAAKQ,UAAU,QAAf,SAAuB,sBAAMA,UAAU,cAAhB,8BAExC,sBAAKA,UAAU,kBAAf,UACE,uBACEC,KAAOL,EAA0B,OAAb,WACpBI,UAAYN,EAA+B,kCAAjB,eAC1BQ,YAAY,WACZC,SAAU,SAAAC,GAAK,OAAIb,EAAQa,EAAMC,OAAOC,UAE1C,qBAAKN,UAAYN,EAAgC,oCAAlB,gBAA/B,SACE,uBACEM,UAAWJ,EAAY,iBAAmB,2BAC1CK,KAAK,WACLM,QAAS,SAAAH,GAAK,OAAIP,EAAYO,EAAMC,OAAOG,cAI9Cd,GACC,qBAAKM,UAAU,aAAf,SACE,sBAAMA,UAAU,cAAhB,oCAMN,wBACEC,KAAK,SACLM,QA1DI,WACPnB,GAIHK,GAAc,GACdM,GAAS,KAJTN,GAAc,GACdM,GAAS,IAMNT,GAIHS,GAAS,GACTJ,GAAa,KAJbA,GAAa,GACbI,GAAS,IAMXU,MAAM,UAAD,OAAWrB,EAAX,uBAAmCE,KA0ChCU,UAAYF,EAA4B,6BAAlB,gBAHxB,oBAOA,mBAAGY,KAAK,IAAIV,UAAU,cAAtB,mCAGA,sBAAKA,UAAU,WAAf,UACE,mBAAGA,UAAU,iBAAb,6CAGA,mBAAGU,KAAK,IAAIV,UAAU,iBAAtB,+BAIN,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,UACf,qBAAKA,UAAU,eACf,qBAAKA,UAAU,eACf,qBAAKA,UAAU,SACf,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,YAEjB,qBAAKA,UAAU,uBCnFRW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.29e27402.chunk.js","sourcesContent":["import './App.css';\nimport { userState, useState } from 'react';\n\nfunction App() {\n  const [userEmail, setEmail] = useState('');\n  const [userPass, setPass] = useState('');\n  const [isLoginError, setLoginError] = useState(false);\n  const [isPassError, setPassError] = useState(false);\n  const [isShowPass, setShowPass] = useState(false);\n  const [isError, setError] = useState(false);\n\n  const login = () => {\n    if (!userEmail) {\n      setLoginError(true);\n      setError(true);\n    } else {\n      setLoginError(false);\n      setError(false);\n    }\n\n    if (!userPass) {\n      setPassError(true)\n      setError(true);\n    } else {\n      setError(false);\n      setPassError(false)\n    }\n\n    alert(`Email: ${userEmail}, Password: ${userPass}`);\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"login\">\n        <div className=\"login__image\"></div>\n        <div className=\"login__form\">\n          <h2 className=\"login__logo\">LOGIN</h2>\n          <input type=\"text\"\n            className={!isLoginError ? 'login__input' : 'login__input login__input-error'}\n            placeholder=\"Email address\"\n            onChange={event => setEmail(event.target.value)}\n          />\n          {isLoginError && <div className=\"error\"><span className=\"error__text\">Email required</span></div>}\n\n          <div className=\"input__password\">\n            <input\n              type={!isShowPass ? \"password\" : \"text\"}\n              className={!isPassError ? \"login__input\" : \"login__input login__input-error\"}\n              placeholder=\"Password\"\n              onChange={event => setPass(event.target.value)}\n            />\n            <div className={!isPassError ? \"password__eye\" : \"password__eye password__eye-error\"}>\n              <input\n                className={isShowPass? \"pass__checkbox\" : \"pass__checkbox checkline\"}\n                type=\"checkbox\"\n                onClick={event => setShowPass(event.target.checked)}\n              />\n            </div>\n\n            {isPassError &&\n              <div className=\"error-pass\">\n                <span className=\"error__text\">\n                  Password required\n              </span>\n              </div>\n            }\n          </div>\n          <button\n            type=\"button\"\n            onClick={login}\n            className={!isError ? \"login__button\" : \"login__button button-error\"}\n          >\n            LOG IN\n          </button>\n          <a href=\"#\" className=\"login__link\">\n            Forgot your password?\n          </a>\n          <div className=\"register\">\n            <p className=\"register__text\">\n              Donâ€™t have an account yet?\n            </p>\n            <a href=\"#\" className=\"register__link\">Register</a>\n          </div>\n        </div>\n      </div>\n      <div className=\"additional__pictures\">\n        <div className=\"sally\"></div>\n        <div className=\"sally-copy\"></div>\n        <div className=\"star-small\"></div>\n        <div className=\"plus\"></div>\n        <div className=\"botpictures\">\n          <div className=\"bot1\"></div>\n          <div className=\"bot2\"></div>\n          <div className=\"bot3\"></div>\n        </div>\n        <div className=\"sally-small\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}